<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace Laasti\Stack;

use Laasti\Services\StackInterface;
use Laasti\Services\MiddlewareInterface;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\Request;

/**
 * Description of Stack
 *
 * @author Sonia
 */
class Stack implements StackInterface
{

    protected $middlewares = [];

    public function unshift(MiddlewareInterface $obj)
    {
        array_unshift($this->middlewares, func_get_args());
        return $this;
    }

    public function push(MiddlewareInterface $obj)
    {
        array_push($this->middlewares, func_get_args());
        return $this;
    }

    /**
     *
     * @param Request $request
     * @return Response
     */
    public function execute(Request $request)
    {

        foreach ($this->middlewares as $key => $spec) {
            $class = array_shift($spec);
            if (is_object($class)) {
                $middleware = $class;
            } else {
                $middleware = new $class;
            }
            array_unshift($spec, $request);
            $return = call_user_func_array([$middleware, 'handle'], $spec);
            $this->middlewares[$key] = $middleware;

            if ($return instanceof Request) {
                continue;
            } elseif ($return instanceof Response) {
                return $return;
            }
        }

        throw new StackException('No response generated by the middleware stack.');
    }

    public function close(Request $request, Response $response)
    {

        $inverted = array_reverse($this->middlewares);
        
        foreach ($inverted as $spec) {
            if (is_object($spec)) {
                $middleware = $spec;
            } else {
                $class = array_shift($spec);
                $middleware = new $class;
            }

            call_user_func_array([$middleware, 'terminate'], array($request, $response));
        }
    }

}